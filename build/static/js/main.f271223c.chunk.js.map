{"version":3,"sources":["serviceWorker.js","services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","containers/CourseManagerContainer.js","services/ModuleService.js","services/LessonService.js","components/LessonTabsComponent.js","actions/lessonActions.js","components/ModuleListComponent.js","actions/moduleActions.js","services/TopicService.js","components/TopicPillsComponent.js","actions/topicActions.js","services/WidgetService.js","actions/widgetActions.js","components/HeadingWidgetComponent.js","components/ParagraphWidgetComponent.js","components/WidgetComponent.js","containers/CourseEditorContainer.js","actions/courseActions.js","components/HomeComponent.js","reducers/moduleReducer.js","reducers/courseReducer.js","reducers/lessonReducer.js","reducers/topicReducer.js","reducers/widgetReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","url","fetch","then","response","json","courseId","method","newCourse","body","JSON","stringify","headers","course","CourseRowComponent","props","state","editing","color","updateTitle","event","newTitle","target","value","title","setState","updateCourse","_id","changeColor","className","style","backgroundColor","this","onClick","to","class","aria-hidden","onChange","owner","lastUpdated","deleteCourse","React","Component","CourseTableComponent","courses","id","cellspacing","width","scope","changeDisplay","map","key","CourseCardComponent","src","alt","CourseGridComponent","CourseManagerContainer","isTable","createCourse","console","log","courseService","actualCourse","prevState","status","filter","c","number","newCourses","enterTitle","type","placeholder","aria-label","aria-describedby","modurl","moduleId","module","lesurl","lessonId","lesson","connect","lessons","lessonReducer","courseReducer","dispatch","deleteLesson","LessonService","createLesson","actualLesson","updateLesson","modules","moduleReducer","deleteModule","ModuleService","createModule","actualModule","updateModule","topurl","topicId","topic","topics","topicReducer","deleteTopic","TopicService","createTopic","actualTopic","updateTopic","widurl","widgetId","widget","deleteWidget","WidgetService","createWidget","actualWidget","updateWidget","saveWidget","widgets","widgetReducer","passedWidget","widgetOrder","name","CourseEditorContainer","params","findCourseById","findModulesForCourse","findModuleById","findLessonsForModule","findLessonById","findTopicsForLesson","findTopicById","findWidgetsForTopic","prevProps","snapshot","href","findModuleForCourse","CourseService","findModule","findLesson","findTopicForLesson","findWidgetForTopic","findTopic","HomeComponent","initialState","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f271223c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const url2 = 'https://wbdv-generic-server.herokuapp.com/api/jannunzi/courses'\r\nconst url = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/courses2'\r\n\r\nexport const findAllCourses = () =>\r\n    fetch(url).then(response => response.json())\r\n\r\n\r\nexport const findCourseById = (courseId) =>\r\n    fetch(`${url}/${courseId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteCourse = (courseId) =>\r\n    fetch(`${url}/${courseId}`, { method: \"DELETE\" })\r\n        .then(response => response.json())\r\n\r\nexport const createCourse = (newCourse) =>\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newCourse),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport const updateCourse = (courseId, course) =>\r\n    fetch(`${url}/${courseId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(course),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findAllCourses,\r\n    deleteCourse,\r\n    createCourse,\r\n    updateCourse,\r\n    findCourseById\r\n}\r\n","import React from \"react\";\r\nimport courseService from \"../services/CourseService\";\r\nimport CourseTableComponent from \"./CourseTableComponent\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n\r\n\r\nclass CourseRowComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course,\r\n        color: \"\"\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    updateTitle = (event) => {\r\n        const newTitle = event.target.value\r\n        const course = {\r\n            ...this.state.course\r\n        }\r\n        course.title = newTitle\r\n        this.setState({\r\n            course: course\r\n        })\r\n        // this.props.updateTitle(course)\r\n    }\r\n\r\n    updateCourse = () => {\r\n        this.setState({ editing: false })\r\n        this.props.updateCourse(this.state.course._id, this.state.course)\r\n    }\r\n\r\n    changeColor = () => {\r\n        this.setState({\r\n            color: \"aquamarine\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr className=\"course-row\" style={{ backgroundColor: this.state.color }} onClick={this.changeColor}>\r\n                <td className=\"priority-1\">\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/edit/${this.state.course._id}`}>\r\n                            <i class=\"fa fa-file-text\" aria-hidden=\"true\"></i> {this.state.course.title}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            onChange={this.updateTitle}\r\n                            value={this.state.course.title} />\r\n                    }\r\n                </td>\r\n                <td className=\"priority-3\">{this.props.course.owner}</td>\r\n                <td className=\"priority-2\">{this.props.course.lastUpdated}</td>\r\n                <td className=\"priority-2\"></td>\r\n                {\r\n                    this.state.editing &&\r\n                    <td className=\"priority-1\">\r\n                        <button onClick={this.updateCourse}>\r\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </td>\r\n                }\r\n                {\r\n                    !this.state.editing &&\r\n                    <td className=\"priority-1\">\r\n                        <i className=\"fa fa-pencil\" onClick={() => this.setState({ editing: true })} aria-hidden=\"true\"></i>\r\n                    </td>\r\n                }\r\n                {\r\n                    !this.state.editing &&\r\n                    <td className=\"priority-1\">\r\n                        <i class=\"fa fa-trash\" onClick={() => this.props.deleteCourse(this.props.course)} aria-hidden=\"true\"></i>\r\n                    </td>\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseRowComponent","import React from \"react\";\r\nimport CourseRowComponent from \"./CourseRowComponent\";\r\nimport courseService from \"../services/CourseService\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nclass CourseTableComponent extends React.Component {\r\n    state = {\r\n        courses: this.props.courses\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        // console.log(props.courses)\r\n    }\r\n\r\n    // deleteCourse = (course) => {\r\n    //     courseService.deleteCourse(course._id).then(status =>\r\n    //         this.setState(prevState => ({\r\n    //             courses: prevState.courses.filter(c => c._id !== course._id)\r\n    //         }))\r\n    //     )\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className=\"container content\">\r\n                <table id=\"courses\" className=\"table table-hover\" cellspacing=\"0\" width=\"100%\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"45%\">Title</th>\r\n                            <th className=\"priority-3\" scope=\"col\" width=\"15%\">Owned by</th>\r\n                            <th className=\"priority-2\" scope=\"col\" width=\"25%\">Last modified</th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\">\r\n                                <div onClick={this.props.changeDisplay}>\r\n                                    <i className=\"fa fa-th-large\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\"><i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i></th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"5%\"></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {\r\n                            this.props.courses.map(course =>\r\n                                <CourseRowComponent\r\n                                    key={course._id}\r\n                                    course={course}\r\n                                    deleteCourse={this.props.deleteCourse}\r\n                                    updateCourse={this.props.updateCourse} \r\n                                    updateTitle={this.props.updateTitle}/>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseTableComponent","import React from \"react\";\r\nimport courseService from \"../services/CourseService\";\r\nimport CourseTableContainer from \"./CourseTableComponent\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport \"./CourseCardComponent.css\"\r\n\r\n\r\nclass CourseCardComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    updateTitle = (event) => {\r\n        const newTitle = event.target.value\r\n        const course = {\r\n            ...this.state.course\r\n        }\r\n        course.title = newTitle\r\n        this.setState({\r\n            course: course\r\n        })\r\n        // this.props.updateTitle(course)\r\n    }\r\n\r\n    updateCourse = () => {\r\n        this.setState({ editing: false })\r\n        this.props.updateCourse(this.state.course._id, this.state.course)\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"card col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-2\">\r\n                <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\" />\r\n                <div class=\"card-body\">\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/edit/${this.state.course._id}`}>\r\n                            <h5 class=\"card-title\">{this.state.course.title}</h5>\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            onChange={this.updateTitle}\r\n                            value={this.state.course.title} />\r\n                    }\r\n                    <p class=\"card-text\">Course Description. This Course is a great course and has cool things.</p>\r\n                    <p class=\"card-text\"><small class=\"text-muted\">Last Updated: {this.props.course.lastUpdated}<br/>\r\n                    Owner: {this.props.course.owner}</small></p>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    {\r\n                        this.state.editing &&\r\n                        <td className=\"priority-1\">\r\n                            <button onClick={this.updateCourse}>\r\n                                <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n                    }\r\n                    {\r\n                        !this.state.editing &&\r\n                        <td className=\"priority-1\">\r\n                            <button onClick={() => this.setState({ editing: true })}>\r\n                                <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n                    }\r\n                    {\r\n                        !this.state.editing &&\r\n                        <td className=\"priority-1\">\r\n                            <button onClick={() => this.props.deleteCourse(this.props.course)}>\r\n                                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseCardComponent","import React from \"react\";\r\nimport courseService from \"../services/CourseService\";\r\nimport CourseTableContainer from \"./CourseTableComponent\";\r\nimport CourseCardComponent from \"./CourseCardComponent\"\r\nimport \"./CourseGridComponent.css\"\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n\r\n\r\nclass CourseGridComponent extends React.Component {\r\n    state = {\r\n        courses: this.props.courses\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        // console.log(props.courses)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div class=\"card-columns card-deck\">\r\n            <div className=\"container content\">\r\n                <table id=\"courses\" className=\"table table-hover\" cellspacing=\"0\" width=\"100%\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"45%\">Recent documents</th>\r\n                            <th className=\"priority-3\" scope=\"col\" width=\"20%\">Owned by me</th>\r\n                            <th className=\"priority-2\" scope=\"col\" width=\"15%\"></th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\">\r\n                                <div onClick={this.props.changeDisplay}>\r\n                                    <i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\"><i class=\"fa fa-sort-alpha-asc\" aria-hidden=\"true\"></i></th>\r\n                            <th className=\"priority-1\" scope=\"col\" width=\"3%\"><i class=\"fa fa-folder\" aria-hidden=\"true\"></i></th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                {/* \r\n                <div class=\"card-columns\"> */}\r\n                <div className=\"row\">\r\n                    {\r\n                        this.props.courses.map(course =>\r\n                            <CourseCardComponent\r\n                                key={course._id}\r\n                                course={course}\r\n                                deleteCourse={this.props.deleteCourse}\r\n                                updateCourse={this.props.updateCourse}\r\n                                updateTitle={this.updateTitle} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseGridComponent","import React from \"react\";\r\nimport \"./CourseManagerContainer.css\"\r\nimport CourseRowComponent from \"../components/CourseRowComponent\";\r\nimport CourseTableComponent from \"../components/CourseTableComponent\";\r\nimport CourseGridComponent from \"../components/CourseGridComponent\"\r\nimport courseService from \"../services/CourseService\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nclass CourseManagerContainer extends React.Component {\r\n    state = {\r\n        courses: [],\r\n        title: \"\",\r\n        isTable: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        courseService.findAllCourses()\r\n            .then(courses => this.setState({\r\n                courses: courses\r\n            }))\r\n        console.log(this.state.courses)\r\n    }\r\n\r\n    createCourse = () => {\r\n        const newCourse = {\r\n            title: this.state.title,\r\n            owner: 'me',\r\n            lastUpdated: 'today'\r\n        }\r\n        console.log(newCourse)\r\n\r\n        courseService.createCourse(newCourse).then(actualCourse =>\r\n            this.setState(prevState => ({\r\n                courses: [\r\n                    ...prevState.courses, actualCourse\r\n                ],\r\n                title: \"\"\r\n            })))\r\n    }\r\n\r\n    deleteCourse = (course) => {\r\n        courseService.deleteCourse(course._id).then(status =>\r\n            this.setState(prevState => ({\r\n                courses: prevState.courses.filter(c => c._id !== course._id)\r\n            }))\r\n        )\r\n    }\r\n\r\n    updateTitle = (course, number) => {\r\n        console.log(course)\r\n        const newCourses = {\r\n            ...this.state.courses\r\n        }\r\n        console.log(newCourses)\r\n        newCourses[number] = course\r\n        this.setState({\r\n            courses: \r\n                newCourses\r\n        })\r\n    }\r\n\r\n    updateCourse = (courseId, course) => {\r\n        courseService.updateCourse(courseId, course)\r\n        .then(status => {\r\n        this.setState(prevState => ({\r\n            courses: prevState.courses.map(c => c._id === courseId?course: c)\r\n        }))\r\n    })\r\n    }\r\n\r\n    enterTitle = (event) => {\r\n        const newTitle = event.target.value\r\n        this.setState({\r\n            title: newTitle\r\n        })\r\n    }\r\n\r\n    changeDisplay = () => {\r\n        this.setState(prevState => ({\r\n            isTable: !prevState.isTable\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                {/* navbar */}\r\n                <nav class=\"navbar sticky-top navbar-dark bg-primary\">\r\n                    <a class=\"navbar-brand \"> <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>  Course Manager</a>\r\n                    <div class=\"input-group mb-3\">\r\n                        <input type=\"text\" value={this.state.title} onChange={this.enterTitle} class=\"form-control\" placeholder=\"New Course Title\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"btn btn-outline-success\" onClick={this.createCourse} type=\"button\"><i className=\"fa fa-plus-circle\"\r\n                            aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    {/* <form class=\"col-sm-6 float-left\">\r\n                        <input className=\"\" onChange={this.enterTitle} type=\"text\" size=\"20\" placeholder=\"New Course Title\" aria-label=\"Search\" />\r\n                        <button onClick={this.createCourse} className=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\"><i className=\"fa fa-plus-circle\"\r\n                            aria-hidden=\"true\"></i></button>\r\n                    </form> */}\r\n                </nav>\r\n                {\r\n                    this.state.isTable &&\r\n                    <CourseTableComponent\r\n                    courses={this.state.courses}\r\n                    deleteCourse={this.deleteCourse}\r\n                    updateCourse={this.updateCourse} \r\n                    changeDisplay={this.changeDisplay}\r\n                    updateTitle={this.updateTitle}/>\r\n                }\r\n                {\r\n                    !this.state.isTable &&\r\n                    <CourseGridComponent\r\n                    courses={this.state.courses}\r\n                    deleteCourse={this.deleteCourse}\r\n                    updateCourse={this.updateCourse} \r\n                    changeDisplay={this.changeDisplay}\r\n                    updateTitle={this.updateTitle}/>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CourseManagerContainer","const url = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/courses2'\r\nconst modurl = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/modules'\r\n\r\nexport const findModule = (moduleId) =>\r\n    fetch(`${modurl}/${moduleId}`).then(response => response.json())\r\n\r\n\r\nexport const findModulesForCourse = (courseId) =>\r\n    fetch(`${url}/${courseId}/modules`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteModule = (moduleId) =>\r\n    fetch(`${modurl}/${moduleId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createModule = (courseId, module) =>\r\n    fetch(`${url}/${courseId}/modules`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(module),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport const updateModule = (moduleId, module) =>\r\n    fetch(`${modurl}/${moduleId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(module),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findModule,\r\n    findModulesForCourse,\r\n    deleteModule,\r\n    createModule,\r\n    updateModule\r\n}\r\n","const url = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/modules'\r\nconst lesurl = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/lessons'\r\n\r\nexport const findLesson = (lessonId) =>\r\n    fetch(`${lesurl}/${lessonId}`).then(response => response.json())\r\n\r\n\r\nexport const findLessonsForModule = (moduleId) =>\r\n    fetch(`${url}/${moduleId}/lessons`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteLesson = (lessonId) =>\r\n    fetch(`${lesurl}/${lessonId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createLesson = (moduleId, lesson) =>\r\n\r\n    fetch(`${url}/${moduleId}/lessons`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(lesson),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const updateLesson = (lessonId, lesson) =>\r\n    fetch(`${lesurl}/${lessonId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(lesson),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findLesson,\r\n    findLessonsForModule,\r\n    deleteLesson,\r\n    createLesson,\r\n    updateLesson\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n    deleteLesson,\r\n    createLesson,\r\n    updateLesson\r\n} from \"../actions/lessonActions\"\r\n\r\nconst LessonTabsComponent = ({ lessons = [], moduleId, course, deleteLesson, createLesson, updateLesson }) =>\r\n    <div>\r\n        <ul class=\"nav nav-tabs navbar-dark bg-dark\">\r\n            {\r\n                lessons.map(lesson =>\r\n                    <li key={lesson._id} class=\"nav-item\">\r\n                        {\r\n                            lesson.editing &&\r\n                            <span>\r\n                                <input value={lesson.title} onChange={(event) => updateLesson({ ...lesson, title: event.target.value })} />\r\n                                <button onClick={() => updateLesson({ ...lesson, editing: false })}>\r\n                                    Ok\r\n                                </button>\r\n                            </span>\r\n                        }\r\n                        {\r\n                            !lesson.editing &&\r\n                            <span>\r\n                                <Link class=\"nav-link\" to={`/edit/${course._id}/modules/${moduleId}/lessons/${lesson._id}`}>\r\n                                    {lesson.title}\r\n                                </Link>\r\n                                <button onClick={() => updateLesson({ ...lesson, editing: true })}>\r\n                                    Edit\r\n                                </button>\r\n                            </span>\r\n                        }\r\n                        <span class=\"\">\r\n                            <i class=\"fa fa-times\"\r\n                                aria-hidden=\"true\"\r\n                                onClick={() => deleteLesson(lesson)}></i>\r\n                        </span>\r\n                    </li>\r\n                )\r\n            }\r\n            <form class=\"form-inline my-2 my-lg-0\">\r\n                <button class=\"btn btn-outline-success my-2 my-sm-0 wbdv-add-page\"\r\n                    onClick={() => { createLesson(moduleId, { title: \"New\" }) }} type=\"button\">\r\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </form>\r\n        </ul>\r\n    </div>\r\n// export default LessonTabsComponent\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    lessons: state.lessonReducer.lessons,\r\n    moduleId: state.lessonReducer.moduleId,\r\n    course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteLesson: (lesson) => deleteLesson(dispatch, lesson),\r\n    createLesson: (moduleId, lesson) => createLesson(dispatch, moduleId, lesson),\r\n    updateLesson: (lesson) => updateLesson(dispatch, lesson)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (LessonTabsComponent)","import LessonService from \"../services/LessonService\"\r\n\r\nexport const DELETE_LESSON = \"DELETE_LESSON\"\r\nexport const CREATE_LESSON = \"CREATE_LESSON\"\r\nexport const UPDATE_LESSON = \"UPDATE_LESSON\"\r\nexport const FIND_LESSON_FOR_MODULE = \"FIND_LESSON_FOR_MODULE\"\r\nexport const FIND_LESSON = \"FIND_LESSON\"\r\n\r\n\r\n\r\nexport const deleteLesson = (dispatch, lesson) =>\r\n    LessonService.deleteLesson(lesson._id)\r\n        .then(status =>\r\n            dispatch({\r\n                type: DELETE_LESSON,\r\n                lesson\r\n            }))\r\n\r\nexport const createLesson = (dispatch, moduleId, lesson) =>\r\n    {\r\n        debugger\r\n        LessonService.createLesson(moduleId, lesson)\r\n        .then(actualLesson =>\r\n            dispatch({\r\n                type: CREATE_LESSON,\r\n                lesson: actualLesson\r\n            }))\r\n            \r\n        }\r\nexport const updateLesson = (dispatch, lesson) =>\r\n    LessonService.updateLesson(lesson._id, lesson)\r\n        .then(status =>\r\n            dispatch({\r\n                type: UPDATE_LESSON,\r\n                lesson\r\n            }))\r\n\r\nexport const findLessonsForModule = (dispatch, moduleId) =>\r\n{\r\n    LessonService.findLessonsForModule(moduleId)\r\n        .then(lessons => dispatch({\r\n            type: FIND_LESSON_FOR_MODULE,\r\n            lessons,\r\n            moduleId\r\n        }))\r\n    }\r\n\r\nexport const findLesson = (dispatch, lessonId) =>\r\n    LessonService.findLesson(lessonId)\r\n        .then(lesson => dispatch({\r\n            type: FIND_LESSON,\r\n            lessonId\r\n        }))\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n  deleteModule,\r\n  createModule,\r\n  updateModule\r\n} from \"../actions/moduleActions\"\r\n\r\nconst ModuleListComponent = (\r\n  { course, modules = [],\r\n  deleteModule, createModule, updateModule}) =>\r\n\r\n  <div class=\"container col-4\">\r\n    <ul class=\"list-group\">\r\n      {\r\n        \r\n        modules.map(module =>\r\n          \r\n          <li key={module._id} class=\"list-group-item list-group-item-action\">\r\n            {\r\n              module.editing &&\r\n              <span>\r\n                <input value={module.title} onChange={(event) => updateModule({...module, title: event.target.value})}/>\r\n                <button onClick={() => updateModule({...module, editing:false})}>\r\n                  Ok\r\n                </button>\r\n              </span>\r\n            }\r\n            {\r\n              !module.editing &&\r\n              <span>\r\n                <Link to={`/edit/${course._id}/modules/${module._id}`}>\r\n                  {module.title}\r\n                </Link>\r\n                <button onClick={() => updateModule({...module, editing:true})}>\r\n                  Edit\r\n                </button>\r\n              </span>\r\n            }\r\n            <i class=\"fa fa-times float-right\"\r\n              aria-hidden=\"true\"\r\n              onClick={() => deleteModule(module)}></i>\r\n          </li>)\r\n      }\r\n      <br />\r\n      <br />\r\n      <form class=\"form-inline my-2 my-lg-0 right-pad-20\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0 wbdv-add-page\" onClick={() => createModule(course, {title: \"New Module\"})} type=\"button\">\r\n          <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      </form>\r\n    </ul>\r\n  </div>\r\n\r\n// export default ModuleListComponent\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  modules: state.moduleReducer.modules,\r\n  course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n  deleteModule: (module) => deleteModule(dispatch, module),\r\n  createModule: (course, module) => createModule(dispatch, course, module),\r\n  updateModule: (module) => updateModule(dispatch, module)\r\n})\r\n\r\nexport default connect\r\n  (stateToPropertyMapper,\r\n  propertyToDispatchMapper)\r\n  (ModuleListComponent)","import ModuleService from \"../services/ModuleService\"\r\n\r\nexport const DELETE_MODULE = \"DELETE_MODULE\"\r\nexport const CREATE_MODULE = \"CREATE_MODULE\"\r\nexport const UPDATE_MODULE = \"UPDATE_MODULE\"\r\nexport const FIND_MODULE_FOR_COURSE = \"FIND_MODULE_FOR_COURSE\"\r\nexport const FIND_MODULE = \"FIND_MODULE\"\r\n\r\n\r\nexport const findModule = (dispatch, moduleId) =>\r\n    ModuleService.findModule(moduleId)\r\n        .then(module =>\r\n            dispatch({\r\n                type: FIND_MODULE,\r\n                moduleId\r\n            }))\r\n\r\nexport const deleteModule = (dispatch, module) =>\r\n    ModuleService.deleteModule(module._id)\r\n        .then(status =>\r\n            dispatch({\r\n                type: DELETE_MODULE,\r\n                module\r\n            }))\r\n\r\nexport const createModule = (dispatch, course, module) =>\r\n    ModuleService.createModule(course._id, module)\r\n        .then(actualModule =>\r\n            dispatch({\r\n                type: CREATE_MODULE,\r\n                module: actualModule\r\n            }))\r\n\r\nexport const updateModule = (dispatch, module) =>\r\n    ModuleService.updateModule(module._id, module)\r\n        .then(status =>\r\n            dispatch({\r\n                type: UPDATE_MODULE,\r\n                module\r\n            }))\r\n\r\nexport const findModuleForCourse = (dispatch, courseId) =>\r\n    ModuleService.findModulesForCourse(courseId)\r\n        .then(modules => dispatch({\r\n            type: FIND_MODULE_FOR_COURSE,\r\n            modules\r\n        }))\r\n\r\n","const lesurl = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/lessons'\r\nconst topurl = 'https://wbdv-generic-server.herokuapp.com/api/ericli0303/topics'\r\n\r\nexport const findTopic = (topicId) =>\r\n    fetch(`${topurl}/${topicId}`).then(response => response.json())\r\n\r\n\r\nexport const findTopicsForLesson = (lessonId) =>\r\n    fetch(`${lesurl}/${lessonId}/topics`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteTopic = (topicId) =>\r\n    fetch(`${topurl}/${topicId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createTopic = (lessonId, topic) => {\r\ndebugger\r\n    return fetch(`${lesurl}/${lessonId}/topics`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\nexport const updateTopic = (topicId, topic) =>\r\n    fetch(`${topurl}/${topicId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findTopic,\r\n    findTopicsForLesson,\r\n    deleteTopic,\r\n    createTopic,\r\n    updateTopic\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n  deleteTopic,\r\n  createTopic,\r\n  updateTopic\r\n} from \"../actions/topicActions\"\r\n\r\n\r\nconst TopicPillsComponent = (\r\n  { course, moduleId, lessonId, topics = [],\r\n    deleteTopic, createTopic, updateTopic }) =>\r\n\r\n  <div class=\"\">\r\n    <ul className=\"nav nav-pills\">\r\n      {\r\n\r\n        topics.map(topic =>\r\n\r\n          <li key={topic._id} className=\"nav-item\">\r\n            {\r\n              topic.editing &&\r\n              <span>\r\n                <input value={topic.title} onChange={(event) => updateTopic({ ...topic, title: event.target.value })} />\r\n                <button onClick={() => updateTopic({ ...topic, editing: false })}>\r\n                  Ok\r\n                </button>\r\n              </span>\r\n            }\r\n            {\r\n              !topic.editing &&\r\n              <span>\r\n                <Link to={`/edit/${course._id}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`}>\r\n                  {topic.title}\r\n                </Link>\r\n                <button onClick={() => updateTopic({ ...topic, editing: true })}>\r\n                  Edit\r\n                </button>\r\n              </span>\r\n            }\r\n            <i class=\"fa fa-times float-right\"\r\n              aria-hidden=\"true\"\r\n              onClick={() => deleteTopic(topic)}></i>\r\n          </li>)\r\n      }\r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0 wbdv-add-pill\" onClick={() => createTopic(lessonId, { title: \"New Topic\" })} type=\"button\">\r\n          <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      </form>\r\n    </ul>\r\n  </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n  topics: state.topicReducer.topics,\r\n  lessonId: state.topicReducer.lessonId,\r\n  moduleId: state.lessonReducer.moduleId,\r\n  course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n  deleteTopic: (topic) => deleteTopic(dispatch, topic),\r\n  createTopic: (lessonId, topic) => createTopic(dispatch, lessonId, topic),\r\n  updateTopic: (topic) => updateTopic(dispatch, topic)\r\n})\r\n\r\nexport default connect\r\n  (stateToPropertyMapper,\r\n    propertyToDispatchMapper)\r\n  (TopicPillsComponent)","import TopicService from \"../services/TopicService\"\r\n\r\nexport const DELETE_TOPIC = \"DELETE_TOPIC\"\r\nexport const CREATE_TOPIC = \"CREATE_TOPIC\"\r\nexport const UPDATE_TOPIC = \"UPDATE_TOPIC\"\r\nexport const FIND_TOPIC_FOR_LESSON = \"FIND_TOPIC_FOR_LESSON\"\r\nexport const FIND_TOPIC = \"FIND_TOPIC\"\r\n\r\n\r\nexport const findTopic = (dispatch, topicId) =>\r\n    TopicService.findTopic(topicId)\r\n        .then(topic =>\r\n            dispatch({\r\n                type: FIND_TOPIC,\r\n                topicId\r\n            }))\r\n\r\nexport const deleteTopic = (dispatch, topic) =>\r\n    TopicService.deleteTopic(topic._id)\r\n        .then(status =>\r\n            dispatch({\r\n                type: DELETE_TOPIC,\r\n                topic\r\n            }))\r\n\r\nexport const createTopic = (dispatch, lessonId, topic) =>\r\n    TopicService.createTopic(lessonId, topic)\r\n        .then(actualTopic =>\r\n            dispatch({\r\n                type: CREATE_TOPIC,\r\n                topic: actualTopic\r\n            }))\r\n\r\nexport const updateTopic = (dispatch, topic) =>\r\n    TopicService.updateTopic(topic._id, topic)\r\n        .then(status =>\r\n            dispatch({\r\n                type: UPDATE_TOPIC,\r\n                topic\r\n            }))\r\n\r\nexport const findTopicForLesson = (dispatch, lessonId) =>\r\n\r\n    TopicService.findTopicsForLesson(lessonId)\r\n        .then(topics => dispatch({\r\n            type: FIND_TOPIC_FOR_LESSON,\r\n            topics,\r\n            lessonId\r\n        }))\r\n\r\n","const topurl = 'https://limitless-fortress-34579.herokuapp.com/api/topics'\r\nconst widurl = 'https://limitless-fortress-34579.herokuapp.com/api/widgets'\r\n\r\nexport const findWidget = (widgetId) =>\r\n    fetch(`${widurl}/${widgetId}`).then(response => response.json())\r\n\r\n\r\nexport const findWidgetsForTopic = (topicId) =>\r\n    fetch(`${topurl}/${topicId}/widgets`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteWidget = (widgetId) =>\r\n    fetch(`${widurl}/${widgetId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createWidget = (topicId, widget) => {\r\n    debugger\r\n    return fetch(`${topurl}/${topicId}/widgets`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(widget),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\n\r\nexport const updateWidget = (widgetId, widget) =>\r\n    fetch(`${widurl}/${widgetId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(widget),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport default {\r\n    findWidget,\r\n    findWidgetsForTopic,\r\n    deleteWidget,\r\n    createWidget,\r\n    updateWidget\r\n}\r\n","import WidgetService from \"../services/WidgetService\"\r\n\r\nexport const DELETE_WIDGET = \"DELETE_WIDGET\"\r\nexport const CREATE_WIDGET = \"CREATE_WIDGET\"\r\nexport const UPDATE_WIDGET = \"UPDATE_WIDGET\"\r\nexport const FIND_WIDGET_FOR_TOPIC = \"FIND_WIDGET_FOR_TOPIC\"\r\nexport const FIND_WIDGET = \"FIND_WIDGET\"\r\n\r\n\r\nexport const findWidget = (dispatch, widgetId) =>\r\n    WidgetService.findWidget(widgetId)\r\n        .then(widget =>\r\n            dispatch({\r\n                type: FIND_WIDGET,\r\n                widgetId\r\n            }))\r\n\r\nexport const deleteWidget = (dispatch, widget) => {\r\n    debugger\r\n    return WidgetService.deleteWidget(widget.id)\r\n        .then(status =>\r\n            dispatch({\r\n                type: DELETE_WIDGET,\r\n                widget\r\n            }))\r\n}\r\n\r\nexport const createWidget = (dispatch, topicId, widget) => {\r\n    debugger\r\n    return WidgetService.createWidget(topicId, widget)\r\n        .then(actualWidget =>\r\n            dispatch({\r\n                type: CREATE_WIDGET,\r\n                widget: actualWidget\r\n            }))\r\n}\r\n\r\nexport const updateWidget = (dispatch, widget) => {\r\n    dispatch({\r\n        type: UPDATE_WIDGET,\r\n        widget\r\n    })\r\n}\r\n\r\nexport const saveWidget = (dispatch, widget) => {\r\n    debugger\r\n    WidgetService.updateWidget(widget.id, widget)\r\n        .then(status =>\r\n            dispatch({\r\n                type: UPDATE_WIDGET,\r\n                widget\r\n            }))\r\n}\r\n\r\n\r\nexport const findWidgetForTopic = (dispatch, topicId) => {\r\n    debugger\r\n    return WidgetService.findWidgetsForTopic(topicId)\r\n        .then(widgets => dispatch({\r\n            type: FIND_WIDGET_FOR_TOPIC,\r\n            widgets,\r\n            topicId\r\n        }))\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n    deleteWidget,\r\n    createWidget,\r\n    updateWidget,\r\n    saveWidget\r\n} from \"../actions/widgetActions\"\r\n\r\n\r\nconst HeadingWidgetComponent = (\r\n    { course, moduleId, lessonId, topicId, widgets = [], passedWidget,\r\n        deleteWidget, createWidget, updateWidget, saveWidget }) =>\r\n\r\n    <div class=\"container\">\r\n        <h4>\r\n            Heading widget\r\n            <span class=\"float-right\">\r\n                <a class=\"btn btn-warning\" onClick={(event) => updateWidget({ ...passedWidget, widgetOrder: passedWidget.widgetOrder++ })}>\r\n                    <i class=\"fas fa-arrow-up\"></i>\r\n                </a>\r\n                <a class=\"btn btn-warning\" onClick={(event) => updateWidget({ ...passedWidget, widgetOrder: passedWidget.widgetOrder-- })}>\r\n                    <i class=\"fas fa-arrow-down\"></i>\r\n                </a>\r\n                <select class=\"\" value={passedWidget.type} onChange={(event) => updateWidget({ ...passedWidget, type: event.target.value })}>\r\n                    <option value=\"Heading\">Heading</option>\r\n                    <option value=\"Paragraph\">Paragraph</option>\r\n                </select>\r\n                <button type=\"button\" class=\"btn btn-success\" onClick={() => saveWidget({ ...passedWidget, editing: false })}>Save</button>\r\n                <a class=\"btn btn-danger\" onClick={() => deleteWidget(passedWidget)}><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n            </span>\r\n        </h4>\r\n\r\n        <br />\r\n\r\n\r\n        <form>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-sm\">\r\n                    <input class=\"form-control\" value={passedWidget.value} id=\"heading\" placeholder=\"Heading text\" onChange={(event) => updateWidget({ ...passedWidget, value: event.target.value })} />\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-sm\">\r\n                    <select class=\"form-control\" value={passedWidget.style} onChange={(event) => updateWidget({ ...passedWidget, style: event.target.value })}>\r\n                        <option value=\"Heading 1\">Heading 1</option>\r\n                        <option value=\"Heading 2\">Heading 2</option>\r\n                        <option value=\"Heading 3\">Heading 3</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-sm\">\r\n                    <input type=\"text\" class=\"form-control\" value={passedWidget.name}\r\n                        placeholder=\"Widget name\" onChange={(event) => updateWidget({ ...passedWidget, name: event.target.value })} />\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n        <h3>\r\n            Preview\r\n        </h3>\r\n        {\r\n            passedWidget.style === \"Heading 1\" &&\r\n            <h1>\r\n                {passedWidget.value}\r\n            </h1>\r\n        }\r\n        {\r\n            passedWidget.style === \"Heading 2\" &&\r\n            <h2>\r\n                {passedWidget.value}\r\n            </h2>\r\n        }\r\n        {\r\n            passedWidget.style === \"Heading 3\" &&\r\n            <h3>\r\n                {passedWidget.value}\r\n            </h3>\r\n        }\r\n\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    widgets: state.widgetReducer.widgets,\r\n    topicId: state.widgetReducer.topicId,\r\n    lessonId: state.topicReducer.lessonId,\r\n    moduleId: state.lessonReducer.moduleId,\r\n    course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteWidget: (widget) => deleteWidget(dispatch, widget),\r\n    createWidget: (topicId, widget) => createWidget(dispatch, topicId, widget),\r\n    updateWidget: (widget) => updateWidget(dispatch, widget),\r\n    saveWidget: (widget) => saveWidget(dispatch, widget)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (HeadingWidgetComponent)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport {\r\n    deleteWidget,\r\n    createWidget,\r\n    updateWidget,\r\n    saveWidget\r\n} from \"../actions/widgetActions\"\r\n\r\n\r\nconst ParagraphWidgetComponent = (\r\n    { course, moduleId, lessonId, topicId, widgets = [], passedWidget,\r\n        deleteWidget, createWidget, updateWidget, saveWidget }) =>\r\n\r\n    <div class=\"container\">\r\n        <h4>\r\n            Paragraph Widget\r\n                    <span class=\"float-right\">\r\n                <a class=\"btn btn-warning\" onClick={(event) => updateWidget({ ...passedWidget, widgetOrder: passedWidget.widgetOrder++})}>\r\n                    <i class=\"fas fa-arrow-up\"></i>\r\n                </a>\r\n                <a class=\"btn btn-warning\" onClick={(event) => updateWidget({ ...passedWidget, widgetOrder: passedWidget.widgetOrder--})}>\r\n                    <i class=\"fas fa-arrow-down\"></i>\r\n                </a>\r\n                <select class=\"\" value={passedWidget.type} onChange={(event) => updateWidget({ ...passedWidget, type: event.target.value})}>\r\n                    <option value=\"Heading\">Heading</option>\r\n                    <option value=\"Paragraph\">Paragraph</option>\r\n                </select>\r\n                <button type=\"button\" class=\"btn btn-success\" onClick={() => saveWidget({ ...passedWidget, editing: false })}>Save</button>\r\n                <a class=\"btn btn-danger\" onClick={() => deleteWidget(passedWidget)}><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n            </span>\r\n        </h4>\r\n\r\n        <br />\r\n\r\n\r\n        <form>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-sm\">\r\n                    <input class=\"form-control\" value={passedWidget.value} id=\"heading\" placeholder=\"paragraph\" onChange={(event) => updateWidget({ ...passedWidget, value: event.target.value})}/>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n                <div class=\"col-sm\">\r\n                    <input type=\"text\" class=\"form-control\"\r\n                        placeholder=\"Widget name\" value={passedWidget.name} onChange={(event) => updateWidget({ ...passedWidget, name: event.target.value })}/>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n        <h3>\r\n            Preview\r\n        </h3>\r\n        <p>\r\n            {passedWidget.value}\r\n        </p>\r\n\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    widgets: state.widgetReducer.widgets,\r\n    topicId: state.widgetReducer.topicId,\r\n    lessonId: state.topicReducer.lessonId,\r\n    moduleId: state.lessonReducer.moduleId,\r\n    course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteWidget: (widget) => deleteWidget(dispatch, widget),\r\n    createWidget: (topicId, widget) => createWidget(dispatch, topicId, widget),\r\n    updateWidget: (widget) => updateWidget(dispatch, widget),\r\n    saveWidget: (widget) => saveWidget(dispatch, widget)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (ParagraphWidgetComponent)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport HeadingWidgetComponent from \"./HeadingWidgetComponent\";\r\nimport ParagraphWidgetComponent from \"./ParagraphWidgetComponent\";\r\nimport {\r\n    deleteWidget,\r\n    createWidget,\r\n    updateWidget,\r\n    saveWidget\r\n} from \"../actions/widgetActions\"\r\n\r\n\r\nconst WidgetComponent = (\r\n    { course, moduleId, lessonId, topicId, widgets = [],\r\n        deleteWidget, createWidget, updateWidget, saveWidget }) =>\r\n\r\n    <div class=\"\">\r\n        <ul class=\"list\">\r\n            <h5 class=\"\">\r\n                    Preview\r\n                    <label class=\"switch\">\r\n                    <input type=\"checkbox\" />\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n            </h5>\r\n            {\r\n                widgets.map(widget =>\r\n                    <div class=\"border\">\r\n                        {\r\n                            widget.type === \"Heading\" &&\r\n                            <HeadingWidgetComponent passedWidget={widget} />\r\n                        }\r\n                        {\r\n                            widget.type === \"Paragraph\" &&\r\n                            <ParagraphWidgetComponent passedWidget={widget} />\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            <form class=\"form-inline my-2 my-lg-0\">\r\n                <button class=\"btn btn-outline-success my-2 my-sm-0 wbdv-add-pill\" onClick={() => createWidget(topicId, { name: \"New Widget\", topicId: topicId, type: \"Heading\", style: \"Heading 1\" })} type=\"button\">\r\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </form>\r\n        </ul>\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    widgets: state.widgetReducer.widgets,\r\n    topicId: state.widgetReducer.topicId,\r\n    lessonId: state.topicReducer.lessonId,\r\n    moduleId: state.lessonReducer.moduleId,\r\n    course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteWidget: (widget) => deleteWidget(dispatch, widget),\r\n    createWidget: (topicId, widget) => createWidget(dispatch, topicId, widget),\r\n    updateWidget: (widget) => updateWidget(dispatch, widget),\r\n    saveWidget: (widget) => saveWidget(dispatch, widget)\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper,\r\n        propertyToDispatchMapper)\r\n    (WidgetComponent)","import { buildQueries } from \"@testing-library/react\";\r\nimport \"./CourseEditorContainer.css\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CourseService from \"../services/CourseService\";\r\nimport ModuleService from \"../services/ModuleService\";\r\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\r\nimport ModuleListComponent from \"../components/ModuleListComponent\";\r\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\r\nimport { findModuleForCourse } from \"../actions/moduleActions\";\r\nimport { findModule } from \"../actions/moduleActions\";\r\nimport { findCourseById } from \"../actions/courseActions\";\r\nimport { findLessonsForModule } from \"../actions/lessonActions\";\r\nimport { findLesson } from \"../actions/lessonActions\"\r\nimport { findTopicsForLesson } from \"../services/TopicService\";\r\nimport { findTopicForLesson } from \"../actions/topicActions\";\r\nimport { findTopic } from \"../actions/topicActions\";\r\nimport { findWidgetForTopic} from \"../actions/widgetActions\"\r\nimport WidgetComponent from \"../components/WidgetComponent\";\r\n\r\n\r\nclass CourseEditorContainer extends React.Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        const courseId = this.props.match.params.courseId\r\n        const moduleId = this.props.match.params.moduleId\r\n        const lessonId = this.props.match.params.lessonId\r\n        const topicId = this.props.match.params.topicId\r\n        this.props.findCourseById(courseId)\r\n        this.props.findModulesForCourse(courseId)\r\n        if (moduleId) {\r\n            this.props.findModuleById(moduleId)\r\n            this.props.findLessonsForModule(moduleId)\r\n        }\r\n        if (lessonId) {\r\n            this.props.findLessonById(lessonId)\r\n            this.props.findTopicsForLesson(lessonId)\r\n        }\r\n        if (topicId) {\r\n            this.props.findTopicById(topicId)\r\n            this.props.findWidgetsForTopic(topicId)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const moduleId = this.props.match.params.moduleId\r\n        const previousModuleId = prevProps.match.params.moduleId\r\n        if (moduleId !== previousModuleId) {\r\n            this.props.findLessonsForModule(moduleId)\r\n        }\r\n        const lessonId = this.props.match.params.lessonId\r\n        const previousLessonId = prevProps.match.params.lessonId\r\n        if (lessonId !== previousLessonId) {\r\n            this.props.findTopicsForLesson(lessonId)\r\n        }\r\n        const topicId = this.props.match.params.topicId\r\n        console.log(topicId);\r\n        const previousTopicId = prevProps.match.params.topicId\r\n        if (topicId !== previousTopicId) {\r\n            this.props.findWidgetsForTopic(topicId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>\r\n                <a class=\"wbdv-title\" href=\"#\">Course Editor</a>\r\n                </h2>\r\n                <div class=\"row\">\r\n                    <ModuleListComponent />\r\n                    <div className=\"col-8\">\r\n                        <LessonTabsComponent />\r\n                        <TopicPillsComponent />\r\n                        <WidgetComponent />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findModulesForCourse: (courseId) => findModuleForCourse(dispatch, courseId),\r\n    findCourseById: (courseId) => findCourseById(dispatch, courseId),\r\n    findModuleById: (moduleId) => findModule(dispatch, moduleId),\r\n    findLessonsForModule: (moduleId) => findLessonsForModule(dispatch, moduleId),\r\n    findLessonById: (lessonId) => findLesson(dispatch, lessonId),\r\n    findTopicsForLesson: (lessonId) => findTopicForLesson(dispatch, lessonId),\r\n    findWidgetsForTopic: (topicId) => findWidgetForTopic(dispatch, topicId),\r\n    findTopicById: (topicId) => findTopic(dispatch, topicId),\r\n})\r\n\r\nexport default connect\r\n    (stateToPropertyMapper, propertyToDispatchMapper)\r\n    (CourseEditorContainer)\r\n","import CourseService from \"../services/CourseService\"\r\n\r\nexport const FIND_COURSE_BY_ID = \"FIND_COURSE_BY_ID\"\r\n\r\nexport const findCourseById = (dispatch, courseId) =>\r\n    CourseService.findCourseById(courseId)\r\n        .then(course => dispatch({\r\n            type: FIND_COURSE_BY_ID,\r\n            course\r\n        }))\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\n\r\nconst HomeComponent = ({ }) =>\r\n\r\n    <div class=\"container col-4\">\r\n        <Link to={`/courses`}>\r\n            <h3 class=\"\">Courses</h3>\r\n        </Link>\r\n    </div>\r\n\r\nexport default HomeComponent","import {\r\n    DELETE_MODULE,\r\n    CREATE_MODULE,\r\n    UPDATE_MODULE,\r\n    FIND_MODULE,\r\n    FIND_MODULE_FOR_COURSE\r\n\r\n  } from \"../actions/moduleActions\"\r\n\r\nconst initialState = {\r\n    modules: [],\r\n    moduleId:{}\r\n}\r\n\r\n\r\nconst moduleReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_MODULE:\r\n            return {\r\n                ...state,\r\n                modules: [...state.modules, action.module]\r\n            }\r\n        case FIND_MODULE_FOR_COURSE:\r\n            return {\r\n                ...state,\r\n                modules: action.modules\r\n            }\r\n        case FIND_MODULE:\r\n            return {\r\n                ...state,\r\n                moduleId: action.module\r\n            }\r\n        case UPDATE_MODULE:\r\n            return {\r\n                ...state,\r\n                modules: state.modules.map(module => module._id === action.module._id ? action.module : module)\r\n            }\r\n        case DELETE_MODULE:\r\n            return {\r\n                ...state,\r\n                modules: state.modules.filter(module => module._id !== action.module._id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moduleReducer\r\n","import {\r\n    FIND_COURSE_BY_ID\r\n  } from \"../actions/courseActions\"\r\n\r\n\r\n\r\nconst initialState = {\r\n    courses: [],\r\n    course: {}\r\n}\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FIND_COURSE_BY_ID:\r\n            return {\r\n                ...state,\r\n                course: action.course\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default courseReducer","import {\r\n    DELETE_LESSON,\r\n    CREATE_LESSON,\r\n    UPDATE_LESSON,\r\n    FIND_LESSON,\r\n    FIND_LESSON_FOR_MODULE\r\n\r\n  } from \"../actions/lessonActions\"\r\n\r\nconst initialState = {\r\n    lessons: [],\r\n    lessonId: {}\r\n}\r\n\r\n\r\nconst lessonReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_LESSON:\r\n            return {\r\n                ...state,\r\n                lessons: [...state.lessons, action.lesson]\r\n            }\r\n        case FIND_LESSON_FOR_MODULE:\r\n            return {\r\n                ...state,\r\n                lessons: action.lessons,\r\n                moduleId: action.moduleId\r\n            }\r\n        case FIND_LESSON:\r\n            return {\r\n                ...state,\r\n                lessonId: action.lessonId\r\n            }\r\n        case UPDATE_LESSON:\r\n            return {\r\n                ...state,\r\n                lessons: state.lessons.map(lesson => lesson._id === action.lesson._id ? action.lesson : lesson)\r\n            }\r\n        case DELETE_LESSON:\r\n            return {\r\n                ...state,\r\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lesson._id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default lessonReducer\r\n","import {\r\n    DELETE_TOPIC,\r\n    CREATE_TOPIC,\r\n    UPDATE_TOPIC,\r\n    FIND_TOPIC_FOR_LESSON,\r\n    FIND_TOPIC\r\n\r\n  } from \"../actions/topicActions\"\r\n\r\nconst initialState = {\r\n    topics: [],\r\n    topicId:{}\r\n}\r\n\r\n\r\nconst topicReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TOPIC:\r\n            return {\r\n                ...state,\r\n                topics: [...state.topics, action.topic]\r\n            }\r\n        case FIND_TOPIC_FOR_LESSON:\r\n            return {\r\n                ...state,\r\n                topics: action.topics,\r\n                lessonId: action.lessonId\r\n            }\r\n        case FIND_TOPIC:\r\n            return {\r\n                ...state,\r\n                topicId: action.topicId\r\n            }\r\n        case UPDATE_TOPIC:\r\n            return {\r\n                ...state,\r\n                topics: state.topics.map(topic => topic._id === action.topic._id ? action.topic : topic)\r\n            }\r\n        case DELETE_TOPIC:\r\n            return {\r\n                ...state,\r\n                topics: state.topics.filter(topic => topic._id !== action.topic._id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicReducer\r\n","import {\r\n    DELETE_WIDGET,\r\n    CREATE_WIDGET,\r\n    UPDATE_WIDGET,\r\n    FIND_WIDGET_FOR_TOPIC,\r\n    FIND_WIDGET\r\n\r\n  } from \"../actions/widgetActions\"\r\n\r\nconst initialState = {\r\n    widgets: [],\r\n    widgetId:{}\r\n}\r\n\r\n\r\nconst widgetReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_WIDGET:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                widgets: [...state.widgets, action.widget]\r\n            }\r\n        case FIND_WIDGET_FOR_TOPIC:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                widgets: action.widgets,\r\n                topicId: action.topicId\r\n            }\r\n        case FIND_WIDGET:\r\n            return {\r\n                ...state,\r\n                widgetId: action.widgetId\r\n            }\r\n        case UPDATE_WIDGET:\r\n            return {\r\n                ...state,\r\n                widgets: state.widgets.map(widget => widget.id === action.widget.id ? action.widget : widget)\r\n            }\r\n        case DELETE_WIDGET:\r\n            return {\r\n                ...state,\r\n                widgets: state.widgets.filter(widget => widget.id !== action.widget.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default widgetReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\nimport \"font-awesome/css/font-awesome.min.css\"\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\nimport * as serviceWorker from './serviceWorker';\nimport CourseTableContainer from './components/CourseTableComponent';\nimport CourseManagerContainer from './containers/CourseManagerContainer';\nimport CourseEditorContainer from './containers/CourseEditorContainer';\nimport HomeComponent from \"./components/HomeComponent\";\nimport moduleReducer from \"./reducers/moduleReducer\"\nimport courseReducer from \"./reducers/courseReducer\"\nimport lessonReducer from \"./reducers/lessonReducer\"\nimport topicReducer from \"./reducers/topicReducer\"\nimport widgetReducer from \"./reducers/widgetReducer\"\n\nconst rootReducer = combineReducers({\n  moduleReducer,\n  courseReducer,\n  lessonReducer,\n  topicReducer,\n  widgetReducer\n})\n\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      {/* <Link to=\"/courses\">Courses</Link> */}\n      <Route path=\"/\" exact component={HomeComponent} />\n      <Route path=\"/courses\" exact component={CourseManagerContainer} />\n      <Route path={[\"/edit/:courseId\", \n      \"/edit/:courseId/modules/:moduleId\", \n      \"/edit/:courseId/modules/:moduleId/lessons/:lessonId\",\n      \"/edit/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\",\n      \"/edit/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId/widgets/:widgetId\"]}\n        exact\n        component={CourseEditorContainer} />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}